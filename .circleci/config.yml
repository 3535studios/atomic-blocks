version: 2.1

executors:
  base:
    docker:
      - image: circleci/buildpack-deps:latest
    working_directory: /tmp

  php71_node:
    docker:
      - image: wordpress:php7.1-fpm-alpine
        environment:
          WP_TESTS_DIR: /tmp/src/wordpress-develop/tests/phpunit
      - image: mysql:5.7
        environment:
          MYSQL_DATABASE: youremptytestdbnamehere
          MYSQL_USER: yourusernamehere
          MYSQL_PASSWORD: yourpasswordhere
          MYSQL_ROOT_PASSWORD: wordpress
    working_directory: /tmp/src

  php72_node:
    docker:
      - image: wordpress:php7.2-fpm-alpine
        environment:
          WP_TESTS_DIR: /tmp/src/wordpress-develop/tests/phpunit
      - image: mysql:5.7
        environment:
          MYSQL_DATABASE: youremptytestdbnamehere
          MYSQL_USER: yourusernamehere
          MYSQL_PASSWORD: yourpasswordhere
          MYSQL_ROOT_PASSWORD: wordpress
    working_directory: /tmp/src

  php73_node:
    docker:
      - image: wordpress:php7.3-fpm-alpine
        environment:
          WP_TESTS_DIR: /tmp/src/wordpress-develop/tests/phpunit
      - image: mysql:5.7
        environment:
          MYSQL_DATABASE: youremptytestdbnamehere
          MYSQL_USER: yourusernamehere
          MYSQL_PASSWORD: yourpasswordhere
          MYSQL_ROOT_PASSWORD: wordpress
    working_directory: /tmp/src

  php74_node:
    docker:
      - image: wordpress:php7.4-fpm-alpine
        environment:
          WP_TESTS_DIR: /tmp/src/wordpress-develop/tests/phpunit
      - image: mysql:5.7
        environment:
          MYSQL_DATABASE: youremptytestdbnamehere
          MYSQL_USER: yourusernamehere
          MYSQL_PASSWORD: yourpasswordhere
          MYSQL_ROOT_PASSWORD: wordpress
    working_directory: /tmp/src

commands:
  dir_stats:
    description: "Show details about the current working directory"
    steps:
      - run:
          command: |
            pwd
            ls -lashR

  mkdir_artifacts:
    description: "Make Artifacts directory"
    steps:
      - run:
          command: |
            [ ! -d "/tmp/artifacts" ] && mkdir /tmp/artifacts &>/dev/null

  set_version_variable:
    description: "Set the VERSION environment variable"
    steps:
      - run:
          command: |
            echo "export VERSION=$(git -C /tmp/src describe --tags --abbrev=0)" >> ${BASH_ENV}

  svn_setup:
    description: "Set up SVN"
    steps:
      - run: svn co https://plugins.svn.wordpress.org/atomic-blocks --depth=empty .
      - run: svn up trunk
      - run: svn up tags --depth=empty
      - run: find ./trunk -not -path "./trunk" -delete
      - run: cp -r /tmp/src/. ./trunk
      - run: svn propset svn:ignore -F ./trunk/.svnignore ./trunk

  svn_add_changes:
    description: "Add changes to SVN"
    steps:
      - run:
          command: if [[ ! -z $(svn st | grep ^\!) ]]; then svn st | grep ^! | awk '{print " --force "$2}' | xargs -0r svn rm; fi
      - run: svn add --force .

  svn_create_tag:
    description: "Create a SVN tag"
    steps:
      - set_version_variable
      - run: svn cp trunk tags/${VERSION}

  svn_commit:
    description: "Commit changes to SVN"
    steps:
      - set_version_variable
      - run: svn ci -m "Tagging ${VERSION} from GitHub" --no-auth-cache --non-interactive --username "${SVN_USERNAME}" --password "${SVN_PASSWORD}"

  prepare_environment:
    description: "Prepare the environment."
    parameters:
      clone-wordpress-develop:
        type: boolean
        default: false
      run-npm-install:
        type: boolean
        default: false
    steps:
      - dir_stats
      - run: apk add --no-cache git nodejs npm
      - run:
          command: |
            php -r "copy('https://getcomposer.org/installer', 'composer-setup.php');"
            EXPECTED_SIGNATURE=$(curl -s https://composer.github.io/installer.sig)
            ACTUAL_SIGNATURE=$(php -r "echo hash_file('sha384', 'composer-setup.php');")
            [[ "$EXPECTED_SIGNATURE" == "$ACTUAL_SIGNATURE" ]] && php composer-setup.php --install-dir=/bin --filename=composer || exit 1
            composer config -g github-protocols https && composer config -g repo.packagist composer https://packagist.org
      - when:
          condition: << parameters.clone-wordpress-develop >>
          steps:
            - run: git clone git://develop.git.wordpress.org/ wordpress-develop
            - run: cp wordpress-develop/wp-tests-config-sample.php wordpress-develop/wp-tests-config.php
            - run: sed -i 's/localhost/127.0.0.1/g' wordpress-develop/wp-tests-config.php
      - run: mkdir -p wordpress-develop/src/wp-content/plugins/atomic-blocks
      - checkout:
          path: wordpress-develop/src/wp-content/plugins/atomic-blocks
      - run:
          working_directory: wordpress-develop/src/wp-content/plugins/atomic-blocks/
          command: composer install --prefer-dist --no-suggest --optimize-autoloader
      - when:
          condition: << parameters.run-npm-install >>
          steps:
            - run: npm install

jobs:
  checkout:
    executor: base
    steps:
      - mkdir_artifacts
      - checkout:
          path: src
      - persist_to_workspace:
          root: /tmp
          paths:
            - src

  checks:
    executor: php74_node
    steps:
      - dir_stats
      - attach_workspace:
          at: /tmp
      - prepare_environment:
          clone-wordpress-develop: false
          run-npm-install: true
      - run:
          working_directory: wordpress-develop/src/wp-content/plugins/atomic-blocks/
          command: composer phpcs && npm run lint:js && npm run lint:css:src

  php-71:
    executor: php71_node
    steps:
      - prepare_environment
      - run:
          working_directory: wordpress-develop/src/wp-content/plugins/atomic-blocks/
          command: composer phpunit

  php-72:
    executor: php72_node
    steps:
      - prepare_environment
      - run:
          working_directory: wordpress-develop/src/wp-content/plugins/atomic-blocks/
          command: composer phpunit

  php-73:
    executor: php73_node
    steps:
      - prepare_environment
      - run:
          working_directory: wordpress-develop/src/wp-content/plugins/atomic-blocks/
          command: composer phpunit

  php-74:
    executor: php74_node
    steps:
      - prepare_environment
      - run:
          working_directory: wordpress-develop/src/wp-content/plugins/atomic-blocks/
          command: composer phpunit

  bundle:
    executor: base
    steps:
      - attach_workspace:
          at: /tmp/src
      - mkdir_artifacts
      - run:
          working_directory: wordpress-develop/src/wp-content/plugins/atomic-blocks/
          name: "Bundle plugin files into a zip"
          command: |
            BUILD_VERSION=`grep 'Version' atomic-blocks/atomicblocks.php | cut -f4 -d' '`
            FILENAME_ZIP=atomic-blocks.$BUILD_VERSION.zip
            zip -x@atomic-blocks/.zipignore -r "/tmp/artifacts/$FILENAME_ZIP" atomic-blocks/
      - store_artifacts:
          path: /tmp/artifacts/

  deploy_svn_branch:
    executor: base
    working_directory: /tmp/artifacts
    steps:
      - attach_workspace:
          at: /tmp
      - svn_setup
      - svn_create_tag
      - svn_add_changes
      - svn_commit

  deploy_svn_tag:
    executor: base
    working_directory: /tmp/artifacts
    steps:
      - attach_workspace:
          at: /tmp
      - svn_setup
      - svn_create_tag
      - svn_add_changes
      - svn_commit

workflows:
  version: 2
  checks:
    jobs:
      - checkout:
          filters:
            branches:
              ignore:
                - master
      - checks:
          requires:
            - checkout
          filters:
            branches:
              ignore:
                - master
      - php-71
      - php-72
      - php-73
      - php-74

  branch_deploy:
    jobs:
      - checkout:
          filters:
            branches:
              only:
                - master
      - checks:
          requires:
            - checkout
          filters:
            branches:
              only:
                - master
      - deploy_svn_branch:
          context: genesis-svn
          requires:
            - checks
          filters:
            branches:
              only:
                - master

  tag_deploy:
    jobs:
      - checkout:
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - checks:
          requires:
            - checkout
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
      - deploy_svn_tag:
          context: genesis-svn
          requires:
            - checks
          filters:
            tags:
              only: /^\d+\.\d+\.\d+$/
            branches:
              ignore: /.*/
